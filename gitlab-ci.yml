coverage-test:
  stage: coverage-staging-check
  image: docker.mncbank.co.id:5000/golang:latest
  script:
    - echo "machine gitlab.mncbank.co.id login $USER_GITLAB password $TOKEN_GITLAB" > ~/.netrc
    - go test ./app/adapter/... ./app/usecase/... ./app/repository/... -coverprofile=coverage.out
    - go tool cover -func ./coverage.out
  artifacts:
    paths:
      - ./coverage.out
  tags:
    - runner-70
  only: 
    - merge_requests

sonarqube-check:
  stage: testing
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  dependencies:
    - coverage-test
  script:
    - sonar-scanner -Dsonar.login=$RUNNER_UNAME -Dsonar.password=$RUNNER_PASS -Dsonar.backend_mb-mid-depo-online_AYoXS-lmphgTwGg5n7da -Dsonar.go.coverage.reportPaths=./coverage.out
  allow_failure: false
  only: 
    - merge_requests
  tags:
    - runner-70
